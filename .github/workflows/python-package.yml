# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: List files in the repository
      run: ls -la
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f poetry.lock ]; then poetry install; fi
    - name: Lint with pylint
      run: |
        python -m pip install pylint
        # stop the build if there are Python syntax errors or undefined names
        pylint mtbl_playerkit/ --max-line-length=127
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide

    - name: Test with pytest & coverage
      run: |
        poetry run coverage run -m pytest
        poetry run coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
